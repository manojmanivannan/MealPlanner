services:
  # --- LOCAL DEVELOPMENT PROFILE ---
  nginx-local:
    profiles:
      - local
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  # --- PRODUCTION PROFILE ---
  tailscale-nginx:
    profiles:
      - prod
    image: tailscale/tailscale:latest
    hostname: meal_planner
    environment:
      - TS_AUTHKEY=$TS_AUTHKEY
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/meal.json
      - TS_USERSPACE=false
    volumes:
      - ${PWD}/tailscale-nginx/state:/var/lib/tailscale
      - ${PWD}/config:/config
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped

  nginx-prod:
    profiles:
      - prod
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html
    depends_on:
      backend:
        condition: service_healthy
      tailscale-nginx:
        condition: service_started
    network_mode: service:tailscale-nginx
    restart: unless-stopped

  # --- COMMON SERVICES (Always run) ---
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=recipes
      - LOG_LEVEL=debug
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose -O /dev/null --tries=1 http://localhost:5000/health || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=recipes
      - POSTGRES_PORT=5432
      - PGUSER=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "recipes", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

# volumes:
  # db-data:  # (no longer needed, using host directory)